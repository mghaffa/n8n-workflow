name: Bullet Catalyst (OpenAI + Grok)

on:
  schedule:
    # 8:00 AM America/Los_Angeles â‰ˆ 15:00 UTC during DST
    - cron: "0 15 * * 1-5"
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        # Avoid npm ci error when no package-lock exists
        run: npm i

      - name: Run (dry-run only if env truly missing)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          XAI_API_KEY:    ${{ secrets.XAI_API_KEY }}
          EMAIL_FROM:     ${{ secrets.EMAIL_FROM }}
          EMAIL_TO:       ${{ secrets.EMAIL_TO }}
          SMTP_HOST:      ${{ secrets.SMTP_HOST }}
          SMTP_PORT:      ${{ secrets.SMTP_PORT }}
          SMTP_USER:      ${{ secrets.SMTP_USER }}
          SMTP_PASS:      ${{ secrets.SMTP_PASS }}
          OPENAI_MODEL:   gpt-4o-mini
          XAI_MODEL:      grok-4-fast-reasoning
        run: |
          # Show which envs are present (no secret values are printed)
          for v in OPENAI_API_KEY XAI_API_KEY EMAIL_FROM EMAIL_TO SMTP_HOST SMTP_PORT SMTP_USER SMTP_PASS; do
            if [ -z "${!v}" ]; then echo "::notice title=ENV::$v is EMPTY"; else echo "::notice title=ENV::$v is set"; fi
          done

          # Decide DRY RUN based on env (not secrets context)
          if [ -z "$OPENAI_API_KEY" ] || [ -z "$XAI_API_KEY" ] || \
             [ -z "$SMTP_HOST" ] || [ -z "$SMTP_PORT" ] || [ -z "$SMTP_USER" ] || \
             [ -z "$SMTP_PASS" ] || [ -z "$EMAIL_FROM" ] || [ -z "$EMAIL_TO" ]; then
            echo "Missing env -> DRY RUN"
            npm run test-run
          else
            npm start
          fi
